\input{preamble.tex}
\DeclareMathOperator{\F}{\mathcal{F}}
\DeclareMathOperator{\R}{\mathcal{R}}
\DeclareMathOperator{\La}{\mathcal{L}}
\DeclareMathOperator{\V}{\mathcal{V}}
\DeclareMathOperator{\Aut}{Aut}
\usepackage{amssymb}
\begin{document}
\section{Introduction}

\section{Rooted Trees}
 A \emph{rooted tree} is a triple $t = (r,V,E)$, such that $(V,E)$ is a finite, simple connected graph without cycles with 
 vertex set $V$ and edge set $E$. A vertex, $r \in V$, is selected from $V$ and called the \emph{root}. By convention each edge is directed away from $r$.  We denote the
 order of a tree, $t$, by $\lvert t \rvert$ and the set of order $n$ rooted trees is denoted $\R_n$.  In addition we define 
 $R : = \bigcup R_n$.
 
 A \emph{labelled rooted tree} is a quadruple $t = (r,V,E,L)$ such that $(r,V,E)$ is a rooted tree and 
 \[L: V \longrightarrow \{1,2,\dots,\lvert t \rvert\}\] 
is a bijective map.  We denote the set of order $n$ labelled rooted trees by $\La_n$ and we define $\La = \bigcup \La_n$.      

For any pair of vertices $u$ and $v$ of a rooted tree we write $u \leq v$ if $u$ lies on the unique shortest path from $r$ to $v$.  A 
\emph{random recursive tree} is a quadruple $t = (r,V,E,l)$ such that $t$ is a labelled rooted tree and $l$ is a labelling 
such that if $u \leq v$ then $l(u) < l(v)$. 
We denote the set of order $n$ random recursive trees by $\T_n$ and we define $\T = \bigcup \T_n$. 

%%%%%Define the set of plane trees

Two rooted trees $t_1$ and $t_2$ with roots $r_1$ and $r_2$ and vertex sets $V(t_1)$ and $V(t_2)$ respectively are said to be
isomorphic if there exists a bijection $f: V(t_1) \rightarrow V(t_2)$ such that 
vertices $u,v \in V(t_1)$ are adjacent if and only if $f(u),f(v) \in V(t_2)$ are adjacent and $f(r_1) = r_2$. If 
$V(t_1) = V(t_2)$ then $f$ is called a rooted tree automorphism.  The set of automorphisms of a tree, $t$, together with 
composition of maps forms a group denoted $\Aut(t)$.  The order of the automorphsim group is 
\[\sigma(t) := \lvert \Aut(t) \rvert\] 
Consider a map $\phi: \La \rightarrow R$ that simply forgets the labels of a labelled by mapping
\[
 (r,V,E,L) \mapsto (r,V,E)
\]
The map $\phi$ is clearly surjective but not injective hence we define $\beta(t) = \lvert \phi^{-1}(t) \rvert$ to be the number of
possible isomorphism classes of labellings of a rooted tree $t \in \R$. There are $\lvert t \rvert !$ possible labellings of a tree 
$t \in \R$ hence there are  
\begin{equation}\label{eq:1}
  \beta(t) = \frac{\lvert t \rvert !}{\sigma(t)} 
\end{equation}
isomorphism classes of labellings of $t$.  

Since $\T \leq \La$ we denote by $\psi$ the restriction of $\phi$ to random recursive trees and define
\[
 \alpha(t) := \lvert \psi^{-1}(t) \rvert 
\]
however, to provide a result analagous to Equation \ref{eq:1} we require several additional definitions. 

Let $t_1,t_2,\dots,t_k$ be a forest of rooted trees: the rooted tree $B^{+}(t_1,t_2,\dots,t_k)$ is built from this forest by 
introducing a new vertex, $r$ (the root of $B^{+}(t_1,t_2,\dots,t_k)$), and joining the roots of each tree $t_1,t_2,\dots,t_k$ 
to $r$ via an edge.  Since every tree $t$ can be written as $B^{+}(t_1,t_2,\dots,t_k)$ if $\lvert t \rvert > 1$ we henceforth 
assume that each rooted tree $t = B^{+}(t_1,t_2,\dots,t_k)$ if $\lvert t \rvert >1$.  For conveniance we will denote the rooted tree on 1 vertex 
by $\bullet$.

%%%WE can get rid of the order condition by following Connes and Kreimer and defining a rooted tree on no vertices

We have already seen one function $f: \R \rightarrow \mathbb{R}$ on rooted trees ($f(t) = \lvert t \rvert$), let us consider 
another: We define the tree factorial $t!$ recursively
\begin{align}
 \bullet! &=  1  \\
 t ! &= \lvert t \rvert \prod_{i=1}^k t_i !
\end{align}

\begin{ex}
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Include a few examples%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end{ex}

\begin{lem}
For a rooted tree $t$,
 \begin{equation}\label{eq:2}
\alpha(t) = \frac{\lvert t \rvert !}{t!\sigma(t)}
 \end{equation}
\end{lem}

%%%%%induced subtree

\begin{proof}
 There are $n!$ ways of labelling a tree $t \in \R_n$, however if $l$ is a random recursive labelling every induced subtree 
 $t_v$ and a totally ordered set, $S$, of labels there is precisely one possible label $s \in S$ for vertex $v$ (namely $s = \min(S)$).  
 Therefore the factor we should divide out by is precisely $t!$.  In addition, to calculate the number of isomorphism classes of 
 random recursive trees we must again divide out by $\sigma(t)$.
\end{proof}

Finally, let $\chi: \F \rightarrow \R$ be the map that ``forgets'' the embedding of a rooted plane tree.  It is clear that $\chi$ 
is surjective but not injective hence we define
\[
 \gamma(t) = \lvert \chi^{-1} \rvert 
\]
the number of isomorphism classes of embeddings of a rooted tree $t$.  In order to obtain a third relation analagous to Equations 
\ref{eq:1} and \ref{eq:2} we will describe a third function $w: \R \rightarrow \mathbb{R}$ recursively:
\begin{align}
 w(\bullet) &= 1  \\ 
 w(t)  &= k!\prod_{i=1}^{k}w(t_i) 
\end{align}
\begin{ex}
 Do the same example set as before
\end{ex}

\begin{lem}
 \begin{equation}
  \gamma(t) = \frac{w(t)}{\sigma(t)}
 \end{equation}
\end{lem}
\begin{proof}
 %%%%%%add a diagram to this proof
 Let $B^{+}(t_1^{n_1},t_2^{n_2},\dots,t_k^{n_k})$ denote a tree in which the root is incident to $n_1$ isomorphic copies 
 of a tree $t_1$, $n_2$ isomorphic copies of $t_2$ and so forth.  We remark that every rooted tree with at least 2 vertices can 
 be written in this way.  Let $t  \in R$ and consider an induced subtree $t_v = B^{+}(t_1^{n_1},t_2^{n_2},\dots,t_k^{n_k})$. 
 Vertex $v$ contributes a factor of $\left( \sum_{i=1}^k n_i \right)! $ to $w(t)$ since it has a recursive definition.  The order of 
 automorphism group, $\sigma(t)$ can also be expressed recursively:
 \begin{align}
  \sigma(\bullet) &= 1 \\
  \sigma(t) &= n_1 ! n_2! \dots n_k ! \prod_{i=1}^k\sigma(t_i)^{n_i} 
 \end{align}
Therefore vertex $v$ contribute a factor of $\prod_{i=1}^k n_i !$ to $\sigma(t)$.  Finally consider, $\gamma(t)$, the number of somorphism classes of embeddings of $t$.  
There are 
\[
 \frac{\left(\sum_{i=1}^k n_i \right)!}{\prod_{i=1}^k n_i!}
\]
non-isomorphic possibilities for the ordering of the children of $v$.
\end{proof}
\section{Functions on Trees}
In this section we will build up a 3-part tool kit of functions $f: \R \rightarrow \mathbb{R}$ which will be used to calculate 
 properties of rooted trees such as path length and order.  
 
\subsection{Inductive Maps}
\begin{defn}
 Let $s = \{ s_r\}_{r=0}^{\infty}$ be a sequence such that each $s_r \in \{0,1\}$.  A \emph{variety}, $\V$, of trees is a 
 collection of random recursive trees such that each vertex is permitted to have outdegree $r$ only if $s_r = 1$. 
\end{defn}
\begin{remk}
 For a more general setting see \cite{Bergeron}.
\end{remk}
The \emph{degree function} associated with a sequence $s= \{ s_r\}_{r=0}^{\infty}$ is the exponential generating function (EGF) defined as follows:
\[
 \phi(w) = \sum_{r \geq 0} s_r \frac{w^r}{r!}
\]
%%%%%%%BAD Notation remove phi from earlier or here

\begin{ex}
 The collection, $\mathcal{B}$, of increasing binary trees are the set of all random recursive trees such that each vertex has 
 outdegree either 0,1 or 2.  The degree function for increasing binay trees is
 \[
  \phi(w) = 1 + w + \frac{w^2}{2}
 \]
The degree function for random recursive trees is
\[
 \phi(w) = \exp(w).
\]
\end{ex}
Fix a variety, $\mathcal{V}$, and define $V_n$ to be the number of trees of order $n$ in $\V$.  The EGF of the variety of trees 
is 
\[
 V_{\V}(z) = \sum_{n \geq 1} V_n \frac{z^n}{n!}
\]
For example, 
\begin{align}
V_{\T}(z) &= \sum_{n\geq 1} \frac{z^n}{n} \\
&= \log\left( \frac{1}{1-z}\right)
\end{align}
since the number of random recursive trees of order $n$ is $(n-1)!$.

\begin{defn}
Let $f = \{f_n\}_{n\geq 1}$ be a sequence of real numbers.  A function $s: \R \rightarrow \mathbb{R}$ is called an 
\emph{inductive map} if it is defineable by a relation,
\[
 s(t) = f_{\lvert t \rvert} + \sum_{i=1}^k s(t_i)
\]
where $t = B^{+}(t_1,t_2,\dots,t_k)$.
\end{defn}
Given a tree function $s$ and a variety $\mathcal{V}$ the EGF of $s$ over $\mathcal{V}$ is 
\[
 S(z) = \sum_{t \in \V} s(t) \frac{z^{\lvert t \rvert}}{\lvert t \rvert !}
\]
\begin{ex}
 Let $\delta_{i,j}$ be the usual kronecker delta. The following is a list of possible sequences $f$ and the tree paramater 
 measured by the corresponding function $s$
 \begin{itemize}
  \item[(i)]   $f_n = 1$ for all $n$ counts tree size.
  \item[(ii)] $f_n = \delta_{n,i}$ counts the number of induced subtrees of order $i$.
  \item[(iii)] $f_n = n$ counts path lengths.
 \end{itemize}
 \end{ex}

In order to calculate $S(z)$ easily and effectively we appeal to the following Theorem of Bergeron \cite{Bergeron}.
\begin{thm}
 \[
 S(z) = Y'(z) \int_{0}^{z} \frac{F'(t)}{Y'(t)} dt
 \]
where $F(z)$ is defined from $\V$ and the sequence $f$
\[
 F(z) = \sum_{n \geq 0} f_n V_n \frac{z^n}{n!}
\]
\end{thm}

 \subsection{Butcher Series}
 %The reference for the begining of this section s ``Geometric numerical integration''
 Let $f: \mathbb{R}^n \rightarrow \mathbb{R}^n$ be a suitably differentiable function and consider differential equations of the form 
 \[
  \dot{y} = f(y)
 \]
and $y(s_0) = y_0$.  Note that $f'(y)$ is a linear map (the Jacobian), $f''(y)$ is a billinear map and so on.  

%%ADD the next section carefully%%%%%%
\begin{defn}
Let $t = B^{+}(t_1,t_2,\dots,t_k)$ be  a rooted tree. An \emph{elementary differential} is a map  $F(t):  \mathbb{R} \rightarrow \mathbb{R}$ defined 
recursively:
\begin{align}
 F(\bullet)(s) &= f(s) \\%%%%%This doesn't makes sense becase $s$ is not a real number!!!!
 F(t)(s) &= f^{m}(y)(F(t_1)(y),\dots,f(t_k)(y))
 \end{align}
\end{defn}
Let
\[
 G(s) = \sum_{n=0}^{\infty}f^{(n)}(s_0) \frac{s^n}{n!}
\]
%%%Put some blurb in here i.e. explanation
\begin{theorem}
 The solution of 
 \[
  x(s) = x_0 + \int_{s_0}^{s} G(x(s')) ds'
 \]
is
\[
 x(s) = x_0 + \sum \frac{(s-s_0)^{\lvert t \rvert}}{\lvert t \rvert !}\alpha(t)F(t)(s_0)
\]
\end{theorem}
\begin{ex}
 Let $x_0 = s_0 = 0$  and consider the case $f^{k}(t)(0) = k!$ for all trees $t \in R$, then 
 \[
 f^{(k)}(t)(0) = k!(F(t_1)(0),\dots,F(t_k)(0))
 \]
 thus $G(s) = \frac{1}{(1-s)}$ and $F(t)(s) = w(t)$.  
 
 %Finish off this example
\end{ex}


\subsection{Bare Green Functions}

\section{Rooted Tree Automorphisms}

\section{Applications of Tree Functions}

\end{document}
